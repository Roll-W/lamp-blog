<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2023 RollW
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.2</version>
        <relativePath/>
    </parent>
    <groupId>space.lingu.lamp-blog</groupId>
    <artifactId>lamp-blog-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>../lamp-blog-web</module>
        <module>../lamp-blog-common</module>
        <module>../lamp-blog-file</module>
        <module>../lamp-blog-content</module>
    </modules>

    <!-- TODO: may migrate build system to Gradle -->
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <light.version>0.4.6</light.version>
        <fiesta.version>0.2.1</fiesta.version>
        <web-common.version>0.2.0</web-common.version>
        <guava.version>33.2.1-jre</guava.version>
        <hikari.version>5.0.1</hikari.version>
        <jjwt.version>0.11.5</jjwt.version>
        <mysql.version>8.0.33</mysql.version>
        <elastic-search.version>8.8.2</elastic-search.version>
        <spring-shell.version>2.1.2</spring-shell.version>
        <tomcat-api.version>6.0.53</tomcat-api.version>
        <tomcat-ws.version>10.1.5</tomcat-ws.version>
        <kotlin.version>2.0.0</kotlin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>space.lingu.lamp-blog</groupId>
                <artifactId>lamp-blog-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>space.lingu.lamp-blog</groupId>
                <artifactId>lamp-blog-file-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.shell</groupId>
                <artifactId>spring-shell-starter</artifactId>
                <version>${spring-shell.version}</version>
            </dependency>

            <dependency>
                <groupId>tech.rollw.common</groupId>
                <artifactId>web-common-spring-boot-starter</artifactId>
                <version>${web-common.version}</version>
            </dependency>

            <dependency>
                <groupId>tech.rollw.common</groupId>
                <artifactId>web-common-core</artifactId>
                <version>${web-common.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>annotations-api</artifactId>
                <version>${tomcat-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikari.version}</version>
            </dependency>

            <dependency>
                <groupId>space.lingu.light</groupId>
                <artifactId>light-compiler</artifactId>
                <version>${light.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>space.lingu.light</groupId>
                <artifactId>light-core</artifactId>
                <version>${light.version}</version>
            </dependency>

            <dependency>
                <groupId>space.lingu.light</groupId>
                <artifactId>light-core-logging-slf4j</artifactId>
                <version>${light.version}</version>
            </dependency>

            <dependency>
                <groupId>space.lingu.light</groupId>
                <artifactId>light-core-connection-hikari</artifactId>
                <version>${light.version}</version>
            </dependency>

            <dependency>
                <groupId>space.lingu.fiesta</groupId>
                <artifactId>fiesta-annotations</artifactId>
                <version>${fiesta.version}</version>
            </dependency>

            <dependency>
                <groupId>space.lingu.fiesta</groupId>
                <artifactId>fiesta-checker</artifactId>
                <version>${fiesta.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>space.lingu.fiesta</groupId>
            <artifactId>fiesta-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>space.lingu.fiesta</groupId>
            <artifactId>fiesta-checker</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>${maven.compiler.target}</jvmTarget>
                    <args>
                        <arg>-Xjvm-default=all</arg>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>